#!/bin/bash
##################################################################################################################
#Gatling scale out/cluster run script:
#Before running this script some assumptions are made:
#1) Public keys were exchange inorder to ssh with no password promot (ssh-copy-id on all remotes)
#2) Check  read/write permissions on all folders declared in this script.
#3) Gatling installation (GATLING_HOME variable) is the same on all hosts
#4) Assuming all hosts has the same user name (if not change in script)
##################################################################################################################

#Assuming same user name for all hosts
USER_NAME='operador'

#Remote hosts list
HOSTS=(10.0.1.43 10.0.1.49)

#Assuming all Gatling installation in same path (with write permissions)
GATLING_HOME=/home/operador/gatling-charts-highcharts-bundle-2.1.6
GATLING_SIMULATIONS_DIR=$GATLING_HOME/user-files/simulations
GATLING_RUNNER=$GATLING_HOME/bin/gatling.sh

#Change to your simulation class name
SIMULATION_NAME='OwnCloudSimulation'

#No need to change this
GATLING_REPORT_DIR=$GATLING_HOME/results/
GATHER_REPORTS_DIR=$GATLING_HOME/reports/

echo "Starting Gatling cluster run for simulation: $SIMULATION_NAME"

echo "Cleaning previous runs from localhost"
rm -rf $GATHER_REPORTS_DIR
mkdir $GATHER_REPORTS_DIR
rm -rf $GATLING_REPORT_DIR

for HOST in "${HOSTS[@]}"
do
  echo "Cleaning previous runs from host: $HOST"
  ssh -n -f $USER_NAME@$HOST "sh -c 'rm -rf $GATLING_REPORT_DIR' "
  ssh -n -f $USER_NAME@$HOST "sh -c 'rm -f $GATLING_HOME/run.log' "
done

for HOST in "${HOSTS[@]}"
do
  echo "Copying simulations to host: $HOST"
  scp $GATLING_SIMULATIONS_DIR/OwnCloudSimulation.scala $USER_NAME@$HOST:$GATLING_SIMULATIONS_DIR
done

for HOST in "${HOSTS[@]}"
do
  echo "Running simulation on host: $HOST"
  ssh -n -f $USER_NAME@$HOST "sh -c 'JAVA_OPTS=\"-Dusers=1 -Dramp=1 -Dhost=${HOST} -DserverName=owncloud -Duser=admin -Dpassword=admin\" nohup $GATLING_RUNNER -nr -s $SIMULATION_NAME > $GATLING_HOME/run.log 2>&1 &'"
  # ssh -n -f $USER_NAME@$HOST "sh -c 'nohup $GATLING_RUNNER -nr -s $SIMULATION_NAME > $GATLING_HOME/run.log 2>&1 &'"
done

check_process() {
  # $1 process name
  # $2 remote host
  # $3 remote user
  # echo "$ts: checking $1"
  printf "."
  [ "$1" = "" ]  && return 0
  [ `ssh $3@$2 pgrep -n $1` ] && return 1 || return 0
}

for HOST in "${HOSTS[@]}"
do
  printf "Checking if the simulation on host $HOST is done "
  # timestamp
  # ts=`date +%T`
  # printf "$ts "
  i=1
  while [ $i ]; do
  	check_process "gatling.sh" $HOST $USER_NAME
  	[ $? -eq 0 ]  && echo "$ts: done! " && break
        
  	sleep 1
  done
done

#echo "Running simulation on localhost"
#JAVA_OPTS="-Dusers=1 -Dramp=1 -Dhost=localhost -DserverName=owncloudv2 -Duser=admin -Dpassword=admin" $GATLING_RUNNER -nr -s $SIMULATION_NAME

#echo "Gathering result file from localhost"
#ls -t $GATLING_REPORT_DIR | head -n 1 | xargs -I {} mv ${GATLING_REPORT_DIR}{} ${GATLING_REPORT_DIR}report
#cp ${GATLING_REPORT_DIR}report/simulation.log $GATHER_REPORTS_DIR

for HOST in "${HOSTS[@]}"
do  
  echo "Gathering result file from host: $HOST"
  ssh -n -f $USER_NAME@$HOST "sh -c 'ls -t $GATLING_REPORT_DIR | head -n 1 | xargs -I {} mv ${GATLING_REPORT_DIR}{} ${GATLING_REPORT_DIR}report'"
  mkdir ${GATHER_REPORTS_DIR}reports 
  scp $USER_NAME@$HOST:${GATLING_REPORT_DIR}report/simulation.log ${GATHER_REPORTS_DIR}reports/simulation-$HOST.log
done

mv $GATHER_REPORTS_DIR $GATLING_REPORT_DIR
echo "Aggregating simulations"
$GATLING_RUNNER -ro reports

#using macOSX
#open ${GATLING_REPORT_DIR}reports/index.html

#using ubuntu
google-chrome ${GATLING_REPORT_DIR}reports/index.html
